{
	"name": "HandlingErrorRows_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceFile_ds",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "CopyBadRowstoBadTable"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "CopyGoodRowstoSuccessTbl"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplitCheckInvalidData"
				}
			],
			"script": "source(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false) ~> source1\nsource1 split(Column_2=='Pens',\n\ttrue(),\n\tdisjoint: false) ~> ConditionalSplitCheckInvalidData@(ErrorRows, GoodRows)\nConditionalSplitCheckInvalidData@ErrorRows sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSalesDate as string,\n\t\tSalesItem as string,\n\t\tCountry as string,\n\t\tQuantity as string,\n\t\tFileName as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> CopyBadRowstoBadTable\nConditionalSplitCheckInvalidData@GoodRows sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSalesDate as string,\n\t\tSalesItem as string,\n\t\tCountry as string,\n\t\tQuantity as integer,\n\t\tFileName as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> CopyGoodRowstoSuccessTbl"
		}
	}
}